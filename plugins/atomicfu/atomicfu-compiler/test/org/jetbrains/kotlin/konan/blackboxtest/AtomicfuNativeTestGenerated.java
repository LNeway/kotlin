/*
 * Copyright 2010-2023 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.konan.blackboxtest;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.konan.blackboxtest.support.group.UseStandardTestCaseGroupProvider;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.junit.jupiter.api.Tag;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.GenerateNativeTestsKt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("plugins/atomicfu/atomicfu-compiler/testData/nativeBox")
@TestDataPath("$PROJECT_ROOT")
@Tag("atomicfu")
@UseStandardTestCaseGroupProvider()
public class AtomicfuNativeTestGenerated extends AbstractNativeBlackBoxTest {
    //@Test
    public void testAllFilesPresentInNativeBox() throws Exception {
        KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("plugins/atomicfu/atomicfu-compiler/testData/nativeBox"), Pattern.compile("^(.+)\\.kt$"), null, true);
    }

    //@Test
    @TestMetadata("ArithmeticTest.kt")
    public void testArithmeticTest() throws Exception {
        runTest("plugins/atomicfu/atomicfu-compiler/testData/nativeBox/ArithmeticTest.kt");
    }

    //@Test
    @TestMetadata("ComplexLoopTest.kt")
    public void testComplexLoopTest() throws Exception {
        runTest("plugins/atomicfu/atomicfu-compiler/testData/nativeBox/ComplexLoopTest.kt");
    }

    //@Test
    @TestMetadata("EasyAtomicExtensionTest.kt")
    public void testEasyAtomicExtensionTest() throws Exception {
        runTest("plugins/atomicfu/atomicfu-compiler/testData/nativeBox/EasyAtomicExtensionTest.kt");
    }

    //@Test
    @TestMetadata("EasyAtomicfuLoopsTest.kt")
    public void testEasyAtomicfuLoopsTest() throws Exception {
        runTest("plugins/atomicfu/atomicfu-compiler/testData/nativeBox/EasyAtomicfuLoopsTest.kt");
    }

    //@Test
    @TestMetadata("ExtensionLoopTest.kt")
    public void testExtensionLoopTest() throws Exception {
        runTest("plugins/atomicfu/atomicfu-compiler/testData/nativeBox/ExtensionLoopTest.kt");
    }

    //@Test
    @TestMetadata("InitBlockInitializationTest.kt")
    public void testInitBlockInitializationTest() throws Exception {
        runTest("plugins/atomicfu/atomicfu-compiler/testData/nativeBox/InitBlockInitializationTest.kt");
    }

    //@Test
    @TestMetadata("ParameterizedInlineFunExtensionTest.kt")
    public void testParameterizedInlineFunExtensionTest() throws Exception {
        runTest("plugins/atomicfu/atomicfu-compiler/testData/nativeBox/ParameterizedInlineFunExtensionTest.kt");
    }

    //@Test
    @TestMetadata("TopLevelTest.kt")
    public void testTopLevelTest() throws Exception {
        runTest("plugins/atomicfu/atomicfu-compiler/testData/nativeBox/TopLevelTest.kt");
    }

    @Test
    @TestMetadata("TopLevelPropertyEasyTest.kt")
    public void testTopLevelPropertyEasyTest() throws Exception {
        runTest("plugins/atomicfu/atomicfu-compiler/testData/nativeBox/TopLevelPropertyEasyTest.kt");
    }
}
