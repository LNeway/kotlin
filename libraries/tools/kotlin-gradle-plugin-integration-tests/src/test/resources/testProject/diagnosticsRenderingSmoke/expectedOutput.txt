> Configure project :

> Configure project :subprojectA
w: [HierarchicalMultiplatformFlagsWarning | WARNING] The following properties are obsolete and will be removed in Kotlin 1.9.20:
kotlin.mpp.enableCompatibilityMetadataVariant, kotlin.mpp.hierarchicalStructureSupport
Read the details here: https://kotlinlang.org/docs/multiplatform-compatibility-guide.html#deprecate-hmpp-properties
#diagnostic-end

w: [CommonMainWithDependsOnDiagnostic | WARNING] commonMain can't declare dependsOn on other source sets
#diagnostic-end

w: [KotlinTargetHierarchyFallbackDependsOnUsageDetected | WARNING] Default Kotlin Target Hierarchy was not applied to the project:
Manual .dependsOn() edges were configured for the following source sets:
[commonMain]

To suppress the 'Default Target Hierarchy' add 'kotlin.mpp.enableDefaultTargetHierarchy=false' to your gradle.properties
#diagnostic-end


> Configure project :subprojectB
w: [CommonMainWithDependsOnDiagnostic | WARNING] commonMain can't declare dependsOn on other source sets
#diagnostic-end

w: [KotlinTargetHierarchyFallbackDependsOnUsageDetected | WARNING] Default Kotlin Target Hierarchy was not applied to the project:
Manual .dependsOn() edges were configured for the following source sets:
[commonMain]

To suppress the 'Default Target Hierarchy' add 'kotlin.mpp.enableDefaultTargetHierarchy=false' to your gradle.properties
#diagnostic-end

w: [UnusedSourceSetsWarning | WARNING] The Kotlin source set unusedCreatedInAfterEvaluate was configured but not added to any Kotlin compilation.

You can add a source set to a target's compilation by connecting it with the compilation's default source set using 'dependsOn'.
See https://kotl.in/connecting-source-sets
#diagnostic-end
